---
- hosts: localhost
  gather_facts: yes
  become: yes

  tasks:

  - name: Récupération des certificats admin
    copy:
      src: /root/enrolment/certs/{{ item }}
      dest: /home/laurent
      owner: laurent
      group: laurent
      remote_src: yes
    with_items:
    - ca.pem
    - ca-key.pem
    - admin.pem
    - admin-key.pem

  - name: Installation de drone-token
    copy:
      src: /vagrant_data/binaries/drone-token
      dest: /usr/local/bin
      mode: 0755

  - name: Config nginx
    copy:
      dest: /etc/nginx/sites-available/dlppkidev
      content: |
        upstream dlppkidev {
          server k8s-worker-0:30080;
          server k8s-worker-1:30080;
        }

        server {
          listen 8090;

          location / {
            proxy_pass http://dlppkidev;
          }
        }

        upstream wrapper {
          server k8s-worker-0:30095;
          server k8s-worker-1:30095;
        }

        server {
          listen 8095;

          location / {
            proxy_pass http://wrapper;
          }
        }

  - name: Lien symbolique
    file:
      state: link
      src: /etc/nginx/sites-available/dlppkidev
      dest: /etc/nginx/sites-enabled/dlppkidev

  - name: Redémarrage de nginx
    systemd:
      name: nginx
      daemon_reload: yes
      enabled: yes
      state: restarted

  - name: Intallation de siege
    copy:
      src: /vagrant_data/binaries/siege
      dest: /usr/local/bin
      mode: 0755
      remote_src: yes

  - name: Configuration de siege
    copy:
      src: /vagrant_data/binaries/siegerc
      dest: /usr/local/etc
      mode: 0644
      remote_src: yes

  - name: Création du kubeconfig
    become_user: laurent
    block:
    - name: set-cluster
      shell: kubectl config set-cluster k8s --certificate-authority=/home/laurent/ca.pem --embed-certs=true --server=https://{{ public_ip }}:6443 --kubeconfig=/home/laurent/admin.kubeconfig

    - name: set-credentials
      shell: kubectl config set-credentials admin --client-certificate=/home/laurent/admin.pem --client-key=/home/laurent/admin-key.pem --embed-certs=true --kubeconfig=/home/laurent/admin.kubeconfig

    - name: set-context
      shell: kubectl config set-context k8s --cluster=k8s --user=admin --kubeconfig=/home/laurent/admin.kubeconfig

    - name: use-context
      shell: kubectl config use-context k8s --kubeconfig=/home/laurent/admin.kubeconfig

    - name: KUBECONFIG
      lineinfile:
        line: export KUBECONFIG=/home/laurent/admin.kubeconfig
        path: /home/laurent/.bashrc

    - name: KUBECONFIG
      lineinfile:
        line: source <(kubectl completion bash)
        path: /home/laurent/.bashrc

    - name: Config git
      copy:
        dest: /home/laurent/.gitconfig
        content: |
          [user]
                  email = laurent.ribot@enedis.fr
                  name = laurent
        owner: laurent
        group: laurent

    - name: Liens repositories
      file:
        state: link
        src: /vagrant/{{ item.src }}
        dest: /home/laurent/{{ item.dest }}
      with_items:
      - { src: dlp-pki-dev, dest: dlp-pki-dev }
      - { src: wrapper-go, dest: wrapper }
      - { src: argparse, dest: argparse }

    - name: Copie kubeconfig
      copy:
        remote_src: yes
        src: /home/laurent/admin.kubeconfig
        dest: "{{ item }}"
      with_items:
      - /home/laurent/dlp-pki-dev/admin.kubeconfig
      - /home/laurent/wrapper/admin.kubeconfig

    - name: Reset repositories
      file:
        state: absent
        path: /home/laurent/{{ item }}/.git
      with_items:
      - dlp-pki-dev
      - wrapper
      - argparse

    - name: Reset repositories
      file:
        state: absent
        path: /home/laurent/{{ item }}/.gitignore
      with_items:
      - dlp-pki-dev
      - wrapper
      - argparse

    - name: Initialisation repositories
      shell: git init && git remote add origin ssh://git@192.168.56.10:2223/laurent/{{ item }}.git && git fetch
      args:
        chdir: /home/laurent/{{ item }}
      with_items:
      - dlp-pki-dev
      - wrapper
      - argparse

    - name: wrapper
      shell: git pull --rebase origin master
      args:
        chdir: /home/laurent/wrapper

    - name: argparse
      shell: git add --all && git commit -m "Argparse" && git pull --rebase origin master && git push -u origin master
      args:
        chdir: /home/laurent/argparse

    - name: dlp-pki-dev
      shell: git pull --rebase origin master && git checkout -b develop
      args:
        chdir: /home/laurent/dlp-pki-dev

#    - name: Récupération du token drone
#      shell: drone-token
#      register: drone_token
#      become_user: root
#
#    - debug: var=drone_token
#
#    - name: Activation du repository
#      debug:
#        msg: "curl -XPOST  -H 'Authorization: Bearer {{ drone_token.stdout }}' http://192.168.56.10:8000/api/repos/laurent/dlp-pki-dev"
#
#    - name: Privilèges du repository
#      debug:
#        msg: "curl -XPATCH -H 'Authorization: Bearer {{ drone_token.stdout }}' -H 'Content-Type: application/json' --data '{\"trusted\": true, \"allow_pr\": false}' http://192.168.56.10:8000/api/repos/laurent/dlp-pki-dev"
